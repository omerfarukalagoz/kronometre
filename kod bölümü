package com.omerfaruk.runnable;

import androidx.appcompat.app.AppCompatActivity;

import android.os.Bundle;
import android.os.Handler;
import android.view.View;
import android.widget.Button;
import android.widget.TextView;

public class MainActivity extends AppCompatActivity {

    TextView textView;
    int number;
    Runnable runnable;
    Handler handler;
    Button button;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        textView = findViewById(R.id.textView);
        button = findViewById(R.id.button2);

        number = 0;
    }

    public void start(View view){

            handler = new Handler();
            runnable = new Runnable() {
                @Override
                public void run() {
                    textView.setText("Time : " + number);
                    number ++;
                    //textView.setText("Time : " + number);
                    handler.postDelayed(runnable,1000);    //ruunable yi kaç saniye aralıklarla çalıştırayım?
                }
            };
            handler.post(runnable);
            button.setEnabled(false);   //starta bir kere bastıktan sonra sart butonu tıklanamaz hale gelicek.
    }

    public void stop(View view){

        button.setEnabled(true);       //stop butonuna basınca start butonu tekrar aktif hale gelir.

        handler.removeCallbacks(runnable);    //runable yi handle ile devre dışı brakıyorum stop butonuna basınca.
        number = 0;
        textView.setText("Time : " + number);   //kronometre ekranını sıfırlıyorum.

    }

}

---------------------------------------------------------------------------------------------------------------------------------------------------------


/*
    --RUNNABLE--HANDLER---
    bazı işlemleri arka arkaya kolaylıkla yapabileceğiz.
    start ve stop butonu olan basit bir kronomtre örneği yapcaz
    start butonu ile kronometreyi başlatıcaz ve stop a basıp sıfırlıycaz.


        public void sart(View view){

        while (number < 100){
            textView.setText("Time : " + number);        bu şekilde çalıştırmaya kalkarsak uygulamayı kitleriz.
            number ++;                                   bunun yerine "Runnable" ve "Handler" kullanıp uyumayı (1 sn beklemeyi) arkaplanda yaptırıcaz.
            textView.setText("Time : " + number);
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                throw new RuntimeException(e);
            }
        }
    }

    start butonuna basınca kronomtereyi çalışırıyor gayet güzel. fakat sart butonuna tekrar basabiliYoruz ve hatta tekrar basınca kronometre hızlanyor.
    bunun önüne geçmek için butonu tanımmlayıp.
    ***** button.setEnabled(false); ****  bu şekilde starta bir kere bastıktan sonra sart butonu tıklanamaz hale gelicek.

    stop butonu içine button.setEnabled(true); yazıp butona basınca da start butonu tekrar aktıf hale gelmiş olur.

    stop butonu içinde -- handler.removeCallbacks(runnable); -- ile runnable yi durdurup --
    number = 0;
    textView.setText("Time : " + number);  -- ile de kronometreyi sıfırlıyoruz

 */
